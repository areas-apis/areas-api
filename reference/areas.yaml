openapi: 3.1.0
x-stoplight:
  id: 0b810d4c5fc11
info:
  title: Areas API
  summary: The Areas API
  description: Use the Areas API to learn more about Christian.
  version: 0.1.0
  contact:
    name: Christian Areas
    email: me@areas.me
    url: areas.me
tags:
  - name: Core
  - name: Life
  - name: Career
servers:
  - url: 'https://api.areas.me'
  - url: 'https://test-api.areas.me'
paths:
  '/persons/{personId}':
    parameters:
      - schema:
          type: string
        name: personId
        in: path
        required: true
    get:
      summary: Get User Info by User ID
      tags:
        - Core
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: User Not Found
      operationId: get-persons-personId
      description: Retrieve the information of the person with the matching person ID.
    patch:
      summary: Update User Information
      operationId: patch-persons-personId
      tags:
        - Core
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing person.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch person properties to update.
  /persons:
    post:
      summary: Create New User
      operationId: post-persons
      tags:
        - Core
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        description: Post the necessary fields for the API to create a new person.
      description: Create a new person.
    parameters: []
components:
  schemas:
    Person:
      title: Person
      type: object
      description: 'The `Person` object contains a person’s details, such as their name, date of birth, email address, and phone number.'
      examples:
        - personId: 1
          createdDateTime: '2022-01-01T07:53:07Z'
          email:
            address: me@areas.me
            verified: true
          name:
            first: Christian
            middle: null
            last: Areas
          phone:
            countryCode: '1'
            number: '4088029811'
          dateOfBirth: '1982-01-18'
        - personId: 2
          createdDateTime: '2022-01-01T07:53:07Z'
          email:
            address: brendamr_10@hotmail.com
            verified: true
          name:
            first: Brenda
            middle: null
            last: Mina Rojas
          phone:
            countryCode: '57'
            number: '3053754738'
          dateOfBirth: '1994-10-19'
      properties:
        personId:
          type: integer
          description: The person’s unique identifier.
          format: int64
        createdDateTime:
          type: string
          format: date-time
          description: The date and time the system created the person.
        email:
          type: object
          description: The person’s email address and whether its verified.
          required:
            - address
            - verified
          properties:
            address:
              type: string
              format: email
              description: The person’s email address.
              example: me@areas.me
            verified:
              type: boolean
              description: Whether the person’s email address is verified.
              default: false
              example: true
        name:
          type: object
          description: The person’s full name.
          properties:
            first:
              type: string
              description: The person’s first name.
              example: Christian
            middle:
              type: string
              description: The person’s middle name.
            last:
              type: string
              description: The person’s last name.
              example: Areas
        phone:
          type: object
          description: The person’s phone number.
          properties:
            countryCode:
              type: string
              maxLength: 2
              example: '1'
              minLength: 1
              description: The person’s country code.
            number:
              type: string
              description: The person’s phone number.
              example: '4088029811'
        dateOfBirth:
          type: string
          format: date
          example: '1982-01-18'
          description: The person’s date of birth.
      required:
        - personId
        - createdDateTime
        - email
    Resume:
      title: Resume
      type: object
      description: 'The `Resume` object contains a person’s experience, education, and skills.'
      examples:
        - resumeId: 1
          personId: 1
          summary: 'A writer who loves language and technology. Honest, transparent, and easy to work with. Runs marathons and builds mechanical keyboards during off hours.'
          experience: {}
          education: {}
          skills: {}
      x-internal: false
      properties:
        resumeId:
          type: integer
          format: int64
          description: The resume’s unique identifier.
        personId:
          format: int64
          type: integer
          description: The person’s unique identifier.
        summary:
          type: string
          description: 'A summary of the person’s experience, education, and skills.'
        experience:
          type: array
          description: Array
          items:
            type: object
            properties:
              company:
                type: string
                description: The company the person works or worked for.
              url:
                type: string
                format: uri
                description: The company’s URL.
              role:
                type: string
                description: The person’s role at the company.
              beginDate:
                type: string
                format: date
                description: The date the person began working at the company.
              endDate:
                type: string
                format: date
                description: The date the person ended working at the company.
              accomplishments:
                type: array
                description: The person’s accomplishments at the company.
                items:
                  type: string
        education:
          type: array
          items:
            type: object
            properties:
              school:
                type: string
              url:
                type: string
                format: uri
              degree:
                type: string
              field:
                type: string
              beginDate:
                type: string
                format: date
              endDate:
                type: string
                format: date
        skills:
          type: array
          items:
            type: object
            properties:
              category:
                type: string
              skills:
                type: array
                items:
                  type: string
      required:
        - resumeId
        - personId
    Portfolio:
      title: Portfolio
      x-stoplight:
        id: 0g7bxxet66vwp
      type: object
      properties:
        id:
          type: string
